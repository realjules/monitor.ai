apiVersion: apps/v1
kind: Deployment
metadata:
  name: model-registry-api
  namespace: ml-oops
spec:
  replicas: 3
  selector:
    matchLabels:
      app: model-registry-api
  template:
    metadata:
      labels:
        app: model-registry-api
    spec:
      containers:
      - name: api
        image: ml-oops-model-registry-api:latest
        ports:
        - containerPort: 8000
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: model-registry-secrets
              key: database-url
        - name: STORAGE_TYPE
          value: "s3"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 15
          periodSeconds: 20

---
apiVersion: v1
kind: Service
metadata:
  name: model-registry-api
  namespace: ml-oops
spec:
  selector:
    app: model-registry-api
  ports:
  - port: 80
    targetPort: 8000
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: model-registry-ingress
  namespace: ml-oops
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: registry.ml-oops.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: model-registry-api
            port:
              number: 80