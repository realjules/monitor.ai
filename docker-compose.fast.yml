services:
  healthcare:
    build:
      context: .
      dockerfile: shared/api.Dockerfile
      target: builder
    volumes:
      - ./core/healthcare:/app
      - pip-cache:/root/.cache/pip
    ports:
      - "8002:8002"
    environment:
      - PORT=8002
      - HOST=0.0.0.0
      - ALLOW_IFRAME=true
      - CORS_ORIGINS=*
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - PYTHONUNBUFFERED=1
    command: >
      sh -c "
        echo 'Starting Healthcare service...' &&
        sleep 10 &&
        python -m uvicorn api.main:app --host 0.0.0.0 --port 8002 --reload --reload-dir /app --log-level debug
      "
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8002/health > /dev/null 2>&1 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    depends_on:
      model-registry:
        condition: service_healthy
      compliance:
        condition: service_healthy

  model-registry:
    build:
      context: .
      dockerfile: shared/model_registry.Dockerfile
      target: builder
    volumes:
      - ./core/model_registry:/app
      - pip-cache:/root/.cache/pip
    ports:
      - "8000:8000"
    environment:
      - PORT=8000
      - HOST=0.0.0.0
      - ALLOW_IFRAME=true
      - CORS_ORIGINS=*
      - PYTHONUNBUFFERED=1
    command: >
      sh -c "
        echo 'Starting Model Registry service...' &&
        sleep 5 &&
        python -m uvicorn api.main:app --host 0.0.0.0 --port 8000 --reload --reload-dir /app --log-level debug
      "
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health > /dev/null 2>&1 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  compliance:
    build:
      context: .
      dockerfile: shared/api.Dockerfile
      target: builder
    volumes:
      - ./core/compliance:/app
      - pip-cache:/root/.cache/pip
    ports:
      - "8001:8001"
    environment:
      - PORT=8001
      - HOST=0.0.0.0
      - ALLOW_IFRAME=true
      - CORS_ORIGINS=*
      - PYTHONUNBUFFERED=1
    command: >
      sh -c "
        echo 'Starting Compliance service...' &&
        sleep 5 &&
        python -m uvicorn audit.main:app --host 0.0.0.0 --port 8001 --reload --reload-dir /app --log-level debug
      "
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8001/health > /dev/null 2>&1 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  frontend:
    build:
      context: services/frontend
      dockerfile: Dockerfile
    volumes:
      - ./services/frontend:/app
      - node-modules:/app/node_modules
      - npm-cache:/root/.npm
    ports:
      - "8003:8003"
    environment:
      - PORT=8003
      - HOST=0.0.0.0
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:8002
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    command: >
      sh -c "
        echo 'Starting Frontend service...' &&
        sleep 15 &&
        npm run dev -- --port 8003 --host 0.0.0.0
      "
    depends_on:
      healthcare:
        condition: service_healthy

  grafana:
    image: grafana/grafana:latest
    volumes:
      - ./config/grafana/grafana.ini:/etc/grafana/grafana.ini
      - grafana-data:/var/lib/grafana
    ports:
      - "3001:3001"
    environment:
      - GF_SERVER_HTTP_PORT=3001
      - GF_SECURITY_ALLOW_EMBEDDING=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:3001/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

volumes:
  pip-cache:
  node-modules:
  npm-cache:
  grafana-data:

networks:
  default:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1400